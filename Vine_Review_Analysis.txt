{
cells: [
{
cell_type: "code",
execution_count: 1,
metadata: { },
outputs: [ ],
source: [
"import pandas as pd ",
"import matplotlib.pyplot as plt"
]
},
{
cell_type: "code",
execution_count: 2,
metadata: { },
outputs: [
{
data: {
text/html: [
"<div> ",
"<style scoped> ",
" .dataframe tbody tr th:only-of-type { ",
" vertical-align: middle; ",
" } ",
" ",
" .dataframe tbody tr th { ",
" vertical-align: top; ",
" } ",
" ",
" .dataframe thead th { ",
" text-align: right; ",
" } ",
"</style> ",
"<table border="1" class="dataframe"> ",
" <thead> ",
" <tr style="text-align: right;"> ",
" <th></th> ",
" <th>review_id</th> ",
" <th>star_rating</th> ",
" <th>helpful_votes</th> ",
" <th>total_votes</th> ",
" <th>vine</th> ",
" <th>verified_purchase</th> ",
" </tr> ",
" </thead> ",
" <tbody> ",
" <tr> ",
" <th>0</th> ",
" <td>R1KKOXHNI8MSXU</td> ",
" <td>4.0</td> ",
" <td>0.0</td> ",
" <td>0.0</td> ",
" <td>N</td> ",
" <td>Y</td> ",
" </tr> ",
" <tr> ",
" <th>1</th> ",
" <td>R26SP2OPDK4HT7</td> ",
" <td>5.0</td> ",
" <td>1.0</td> ",
" <td>2.0</td> ",
" <td>N</td> ",
" <td>Y</td> ",
" </tr> ",
" <tr> ",
" <th>2</th> ",
" <td>RWQEDYAX373I1</td> ",
" <td>5.0</td> ",
" <td>0.0</td> ",
" <td>0.0</td> ",
" <td>N</td> ",
" <td>Y</td> ",
" </tr> ",
" <tr> ",
" <th>3</th> ",
" <td>R231YI7R4GPF6J</td> ",
" <td>5.0</td> ",
" <td>0.0</td> ",
" <td>0.0</td> ",
" <td>N</td> ",
" <td>Y</td> ",
" </tr> ",
" <tr> ",
" <th>4</th> ",
" <td>R3KO3W45DD0L1K</td> ",
" <td>5.0</td> ",
" <td>0.0</td> ",
" <td>0.0</td> ",
" <td>N</td> ",
" <td>Y</td> ",
" </tr> ",
" </tbody> ",
"</table> ",
"</div>"
],
text/plain: [
" review_id star_rating helpful_votes total_votes vine \ ",
"0 R1KKOXHNI8MSXU 4.0 0.0 0.0 N ",
"1 R26SP2OPDK4HT7 5.0 1.0 2.0 N ",
"2 RWQEDYAX373I1 5.0 0.0 0.0 N ",
"3 R231YI7R4GPF6J 5.0 0.0 0.0 N ",
"4 R3KO3W45DD0L1K 5.0 0.0 0.0 N ",
" ",
" verified_purchase ",
"0 Y ",
"1 Y ",
"2 Y ",
"3 Y ",
"4 Y "
]
},
execution_count: 2,
metadata: { },
output_type: "execute_result"
}
],
source: [
"vine_df = pd.read_csv('vine_table.csv') ",
"vine_df.head()"
]
},
{
cell_type: "code",
execution_count: 3,
metadata: { },
outputs: [
{
name: "stdout",
output_type: "stream",
text: [
"<class 'pandas.core.frame.DataFrame'> ",
"RangeIndex: 5906333 entries, 0 to 5906332 ",
"Data columns (total 6 columns): ",
" # Column Dtype ",
"--- ------ ----- ",
" 0 review_id object ",
" 1 star_rating float64 ",
" 2 helpful_votes float64 ",
" 3 total_votes float64 ",
" 4 vine object ",
" 5 verified_purchase object ",
"dtypes: float64(3), object(3) ",
"memory usage: 270.4+ MB "
]
}
],
source: [
"vine_df.info()"
]
},
{
cell_type: "markdown",
metadata: { },
source: [
"# Filter by total votes ",
" ",
"To pick reviews that are more likely to be helpful"
]
},
{
cell_type: "code",
execution_count: 4,
metadata: { },
outputs: [
{
data: {
text/html: [
"<div> ",
"<style scoped> ",
" .dataframe tbody tr th:only-of-type { ",
" vertical-align: middle; ",
" } ",
" ",
" .dataframe tbody tr th { ",
" vertical-align: top; ",
" } ",
" ",
" .dataframe thead th { ",
" text-align: right; ",
" } ",
"</style> ",
"<table border="1" class="dataframe"> ",
" <thead> ",
" <tr style="text-align: right;"> ",
" <th></th> ",
" <th>review_id</th> ",
" <th>star_rating</th> ",
" <th>helpful_votes</th> ",
" <th>total_votes</th> ",
" <th>vine</th> ",
" <th>verified_purchase</th> ",
" </tr> ",
" </thead> ",
" <tbody> ",
" <tr> ",
" <th>211</th> ",
" <td>R35PT06NWP7LDP</td> ",
" <td>5.0</td> ",
" <td>30.0</td> ",
" <td>32.0</td> ",
" <td>N</td> ",
" <td>N</td> ",
" </tr> ",
" <tr> ",
" <th>344</th> ",
" <td>R2P76PJFUGXBHO</td> ",
" <td>1.0</td> ",
" <td>6.0</td> ",
" <td>45.0</td> ",
" <td>N</td> ",
" <td>N</td> ",
" </tr> ",
" <tr> ",
" <th>372</th> ",
" <td>RQW4AFOG9MR4Z</td> ",
" <td>5.0</td> ",
" <td>51.0</td> ",
" <td>52.0</td> ",
" <td>N</td> ",
" <td>N</td> ",
" </tr> ",
" <tr> ",
" <th>406</th> ",
" <td>R2SMUEBMGLAJQK</td> ",
" <td>5.0</td> ",
" <td>29.0</td> ",
" <td>36.0</td> ",
" <td>N</td> ",
" <td>Y</td> ",
" </tr> ",
" <tr> ",
" <th>408</th> ",
" <td>R1XVIZZALU5P6J</td> ",
" <td>5.0</td> ",
" <td>148.0</td> ",
" <td>150.0</td> ",
" <td>N</td> ",
" <td>Y</td> ",
" </tr> ",
" </tbody> ",
"</table> ",
"</div>"
],
text/plain: [
" review_id star_rating helpful_votes total_votes vine \ ",
"211 R35PT06NWP7LDP 5.0 30.0 32.0 N ",
"344 R2P76PJFUGXBHO 1.0 6.0 45.0 N ",
"372 RQW4AFOG9MR4Z 5.0 51.0 52.0 N ",
"406 R2SMUEBMGLAJQK 5.0 29.0 36.0 N ",
"408 R1XVIZZALU5P6J 5.0 148.0 150.0 N ",
" ",
" verified_purchase ",
"211 N ",
"344 N ",
"372 N ",
"406 Y ",
"408 Y "
]
},
execution_count: 4,
metadata: { },
output_type: "execute_result"
}
],
source: [
"filtered_vine_df = vine_df[vine_df['total_votes'] >= 20] ",
"filtered_vine_df.head()"
]
},
{
cell_type: "markdown",
metadata: { },
source: [
"# Find most helpful reviews ",
" ",
"To retrieve all the rows where the number of `helpful_votes` divided by `total_votes` is equal to or greater than 50%"
]
},
{
cell_type: "code",
execution_count: 5,
metadata: { },
outputs: [
{
data: {
text/html: [
"<div> ",
"<style scoped> ",
" .dataframe tbody tr th:only-of-type { ",
" vertical-align: middle; ",
" } ",
" ",
" .dataframe tbody tr th { ",
" vertical-align: top; ",
" } ",
" ",
" .dataframe thead th { ",
" text-align: right; ",
" } ",
"</style> ",
"<table border="1" class="dataframe"> ",
" <thead> ",
" <tr style="text-align: right;"> ",
" <th></th> ",
" <th>review_id</th> ",
" <th>star_rating</th> ",
" <th>helpful_votes</th> ",
" <th>total_votes</th> ",
" <th>vine</th> ",
" <th>verified_purchase</th> ",
" </tr> ",
" </thead> ",
" <tbody> ",
" <tr> ",
" <th>211</th> ",
" <td>R35PT06NWP7LDP</td> ",
" <td>5.0</td> ",
" <td>30.0</td> ",
" <td>32.0</td> ",
" <td>N</td> ",
" <td>N</td> ",
" </tr> ",
" <tr> ",
" <th>372</th> ",
" <td>RQW4AFOG9MR4Z</td> ",
" <td>5.0</td> ",
" <td>51.0</td> ",
" <td>52.0</td> ",
" <td>N</td> ",
" <td>N</td> ",
" </tr> ",
" <tr> ",
" <th>406</th> ",
" <td>R2SMUEBMGLAJQK</td> ",
" <td>5.0</td> ",
" <td>29.0</td> ",
" <td>36.0</td> ",
" <td>N</td> ",
" <td>Y</td> ",
" </tr> ",
" <tr> ",
" <th>408</th> ",
" <td>R1XVIZZALU5P6J</td> ",
" <td>5.0</td> ",
" <td>148.0</td> ",
" <td>150.0</td> ",
" <td>N</td> ",
" <td>Y</td> ",
" </tr> ",
" <tr> ",
" <th>419</th> ",
" <td>R11UFMG8M2488I</td> ",
" <td>4.0</td> ",
" <td>23.0</td> ",
" <td>26.0</td> ",
" <td>N</td> ",
" <td>N</td> ",
" </tr> ",
" </tbody> ",
"</table> ",
"</div>"
],
text/plain: [
" review_id star_rating helpful_votes total_votes vine \ ",
"211 R35PT06NWP7LDP 5.0 30.0 32.0 N ",
"372 RQW4AFOG9MR4Z 5.0 51.0 52.0 N ",
"406 R2SMUEBMGLAJQK 5.0 29.0 36.0 N ",
"408 R1XVIZZALU5P6J 5.0 148.0 150.0 N ",
"419 R11UFMG8M2488I 4.0 23.0 26.0 N ",
" ",
" verified_purchase ",
"211 N ",
"372 N ",
"406 Y ",
"408 Y ",
"419 N "
]
},
execution_count: 5,
metadata: { },
output_type: "execute_result"
}
],
source: [
"new_vine_df = filtered_vine_df.loc[filtered_vine_df.helpful_votes / filtered_vine_df.total_votes >= 0.5] ",
"new_vine_df.head()"
]
},
{
cell_type: "markdown",
metadata: { },
source: [
"# Reviews written as part of the vine program (paid)"
]
},
{
cell_type: "code",
execution_count: 6,
metadata: { },
outputs: [
{
data: {
text/html: [
"<div> ",
"<style scoped> ",
" .dataframe tbody tr th:only-of-type { ",
" vertical-align: middle; ",
" } ",
" ",
" .dataframe tbody tr th { ",
" vertical-align: top; ",
" } ",
" ",
" .dataframe thead th { ",
" text-align: right; ",
" } ",
"</style> ",
"<table border="1" class="dataframe"> ",
" <thead> ",
" <tr style="text-align: right;"> ",
" <th></th> ",
" <th>review_id</th> ",
" <th>star_rating</th> ",
" <th>helpful_votes</th> ",
" <th>total_votes</th> ",
" <th>vine</th> ",
" <th>verified_purchase</th> ",
" </tr> ",
" </thead> ",
" <tbody> ",
" <tr> ",
" <th>50483</th> ",
" <td>R6U9701C3BGO6</td> ",
" <td>3.0</td> ",
" <td>139.0</td> ",
" <td>147.0</td> ",
" <td>Y</td> ",
" <td>N</td> ",
" </tr> ",
" <tr> ",
" <th>50625</th> ",
" <td>R1XK3ALB45D7N4</td> ",
" <td>5.0</td> ",
" <td>33.0</td> ",
" <td>34.0</td> ",
" <td>Y</td> ",
" <td>N</td> ",
" </tr> ",
" <tr> ",
" <th>50635</th> ",
" <td>R1IZCSTLX81D6C</td> ",
" <td>5.0</td> ",
" <td>31.0</td> ",
" <td>33.0</td> ",
" <td>Y</td> ",
" <td>N</td> ",
" </tr> ",
" <tr> ",
" <th>50656</th> ",
" <td>R2C8NC8EQLH4JF</td> ",
" <td>3.0</td> ",
" <td>45.0</td> ",
" <td>48.0</td> ",
" <td>Y</td> ",
" <td>N</td> ",
" </tr> ",
" <tr> ",
" <th>50890</th> ",
" <td>R1JJ1YOJMOML1P</td> ",
" <td>5.0</td> ",
" <td>18.0</td> ",
" <td>21.0</td> ",
" <td>Y</td> ",
" <td>N</td> ",
" </tr> ",
" </tbody> ",
"</table> ",
"</div>"
],
text/plain: [
" review_id star_rating helpful_votes total_votes vine \ ",
"50483 R6U9701C3BGO6 3.0 139.0 147.0 Y ",
"50625 R1XK3ALB45D7N4 5.0 33.0 34.0 Y ",
"50635 R1IZCSTLX81D6C 5.0 31.0 33.0 Y ",
"50656 R2C8NC8EQLH4JF 3.0 45.0 48.0 Y ",
"50890 R1JJ1YOJMOML1P 5.0 18.0 21.0 Y ",
" ",
" verified_purchase ",
"50483 N ",
"50625 N ",
"50635 N ",
"50656 N ",
"50890 N "
]
},
execution_count: 6,
metadata: { },
output_type: "execute_result"
}
],
source: [
"vine_reviews = new_vine_df[new_vine_df['vine'] == 'Y'] ",
"vine_reviews.head()"
]
},
{
cell_type: "markdown",
metadata: { },
source: [
"# Reviews not written as part of the vine program (unpaid)"
]
},
{
cell_type: "code",
execution_count: 7,
metadata: { },
outputs: [
{
data: {
text/html: [
"<div> ",
"<style scoped> ",
" .dataframe tbody tr th:only-of-type { ",
" vertical-align: middle; ",
" } ",
" ",
" .dataframe tbody tr th { ",
" vertical-align: top; ",
" } ",
" ",
" .dataframe thead th { ",
" text-align: right; ",
" } ",
"</style> ",
"<table border="1" class="dataframe"> ",
" <thead> ",
" <tr style="text-align: right;"> ",
" <th></th> ",
" <th>review_id</th> ",
" <th>star_rating</th> ",
" <th>helpful_votes</th> ",
" <th>total_votes</th> ",
" <th>vine</th> ",
" <th>verified_purchase</th> ",
" </tr> ",
" </thead> ",
" <tbody> ",
" <tr> ",
" <th>211</th> ",
" <td>R35PT06NWP7LDP</td> ",
" <td>5.0</td> ",
" <td>30.0</td> ",
" <td>32.0</td> ",
" <td>N</td> ",
" <td>N</td> ",
" </tr> ",
" <tr> ",
" <th>372</th> ",
" <td>RQW4AFOG9MR4Z</td> ",
" <td>5.0</td> ",
" <td>51.0</td> ",
" <td>52.0</td> ",
" <td>N</td> ",
" <td>N</td> ",
" </tr> ",
" <tr> ",
" <th>406</th> ",
" <td>R2SMUEBMGLAJQK</td> ",
" <td>5.0</td> ",
" <td>29.0</td> ",
" <td>36.0</td> ",
" <td>N</td> ",
" <td>Y</td> ",
" </tr> ",
" <tr> ",
" <th>408</th> ",
" <td>R1XVIZZALU5P6J</td> ",
" <td>5.0</td> ",
" <td>148.0</td> ",
" <td>150.0</td> ",
" <td>N</td> ",
" <td>Y</td> ",
" </tr> ",
" <tr> ",
" <th>419</th> ",
" <td>R11UFMG8M2488I</td> ",
" <td>4.0</td> ",
" <td>23.0</td> ",
" <td>26.0</td> ",
" <td>N</td> ",
" <td>N</td> ",
" </tr> ",
" </tbody> ",
"</table> ",
"</div>"
],
text/plain: [
" review_id star_rating helpful_votes total_votes vine \ ",
"211 R35PT06NWP7LDP 5.0 30.0 32.0 N ",
"372 RQW4AFOG9MR4Z 5.0 51.0 52.0 N ",
"406 R2SMUEBMGLAJQK 5.0 29.0 36.0 N ",
"408 R1XVIZZALU5P6J 5.0 148.0 150.0 N ",
"419 R11UFMG8M2488I 4.0 23.0 26.0 N ",
" ",
" verified_purchase ",
"211 N ",
"372 N ",
"406 Y ",
"408 Y ",
"419 N "
]
},
execution_count: 7,
metadata: { },
output_type: "execute_result"
}
],
source: [
"not_vine_reviews = new_vine_df[new_vine_df['vine'] == 'N'] ",
"not_vine_reviews.head()"
]
},
{
cell_type: "markdown",
metadata: { },
source: [
"# 5-Star Review Analysis: ",
" ",
"Comparing the vine and non-vine program"
]
},
{
cell_type: "code",
execution_count: 8,
metadata: { },
outputs: [
{
data: {
text/plain: [
"33"
]
},
execution_count: 8,
metadata: { },
output_type: "execute_result"
}
],
source: [
"count_vine = len(vine_reviews) ",
"count_vine"
]
},
{
cell_type: "code",
execution_count: 9,
metadata: { },
outputs: [
{
data: {
text/plain: [
"45388"
]
},
execution_count: 9,
metadata: { },
output_type: "execute_result"
}
],
source: [
"count_nonvine = len(not_vine_reviews) ",
"count_nonvine"
]
},
{
cell_type: "markdown",
metadata: { },
source: [
"Out of all the reviews, there were **33** paid-vine reviews and **45,388** unpaid reviews."
]
},
{
cell_type: "code",
execution_count: 10,
metadata: { },
outputs: [
{
data: {
text/plain: [
"15"
]
},
execution_count: 10,
metadata: { },
output_type: "execute_result"
}
],
source: [
"max_rating_vine = len(vine_reviews[vine_reviews['star_rating']==5]) ",
"max_rating_vine"
]
},
{
cell_type: "code",
execution_count: 11,
metadata: { },
outputs: [
{
data: {
text/plain: [
"23733"
]
},
execution_count: 11,
metadata: { },
output_type: "execute_result"
}
],
source: [
"max_rating_nonvine = len(not_vine_reviews[not_vine_reviews['star_rating']==5]) ",
"max_rating_nonvine"
]
},
{
cell_type: "markdown",
metadata: { },
source: [
"Out of those reviews, 15 of the vine reviews were **5** star and **23,733** were non-paid and 5 star"
]
},
{
cell_type: "markdown",
metadata: { },
source: [
"### 5-Star Review percentage by program"
]
},
{
cell_type: "markdown",
metadata: { },
source: [
"*5-star Vine Reviews:*"
]
},
{
cell_type: "code",
execution_count: 12,
metadata: { },
outputs: [
{
data: {
text/plain: [
"0.45454545454545453"
]
},
execution_count: 12,
metadata: { },
output_type: "execute_result"
}
],
source: [
"max_rating_vine/count_vine"
]
},
{
cell_type: "code",
execution_count: 13,
metadata: { },
outputs: [
{
data: {
text/plain: [
"0.5228915131752886"
]
},
execution_count: 13,
metadata: { },
output_type: "execute_result"
}
],
source: [
"max_rating_nonvine/count_nonvine"
]
},
{
cell_type: "markdown",
metadata: { },
source: [
"## Results: ",
" ",
"- Vine (paid) Reviews ",
" - 33 total reviews ",
" - 15 were 5 star reviews ",
" - ***45.5%*** of vine (paid) reviews were 5 star ",
" ",
"- Unpaid Reviews ",
" - 45,388 total reviews ",
" - 23,733 5 star reviews ",
" - ***52.3%*** of unpaid reviews were 5 star ",
" ",
" "
]
},
{
cell_type: "markdown",
metadata: { },
source: [
"## Further Analysis "
]
},
{
cell_type: "markdown",
metadata: { },
source: [
"Average star rating of reviews per program (paid and unpaid) "
]
},
{
cell_type: "markdown",
metadata: { },
source: [
"- Paid Vine Program"
]
},
{
cell_type: "code",
execution_count: 23,
metadata: { },
outputs: [
{
data: {
text/plain: [
"4.09"
]
},
execution_count: 23,
metadata: { },
output_type: "execute_result"
}
],
source: [
"round(vine_reviews['star_rating'].mean(),2)"
]
},
{
cell_type: "markdown",
metadata: { },
source: [
"- Unpaid Program"
]
},
{
cell_type: "code",
execution_count: 24,
metadata: { },
outputs: [
{
data: {
text/plain: [
"3.87"
]
},
execution_count: 24,
metadata: { },
output_type: "execute_result"
}
],
source: [
"round(not_vine_reviews['star_rating'].mean(),2)"
]
}
],
metadata: {
kernelspec: {
display_name: "PythonData",
language: "python",
name: "pythondata"
},
language_info: {
codemirror_mode: {
name: "ipython",
version: 3
},
file_extension: ".py",
mimetype: "text/x-python",
name: "python",
nbconvert_exporter: "python",
pygments_lexer: "ipython3",
version: "3.8.5"
},
varInspector: {
cols: {
lenName: 16,
lenType: 16,
lenVar: 40
},
kernels_config: {
python: {
delete_cmd_postfix: "",
delete_cmd_prefix: "del ",
library: "var_list.py",
varRefreshCmd: "print(var_dic_list())"
},
r: {
delete_cmd_postfix: ") ",
delete_cmd_prefix: "rm(",
library: "var_list.r",
varRefreshCmd: "cat(var_dic_list()) "
}
},
types_to_exclude: [
"module",
"function",
"builtin_function_or_method",
"instance",
"_Feature"
],
window_display: false
}
},
nbformat: 4,
nbformat_minor: 4
}